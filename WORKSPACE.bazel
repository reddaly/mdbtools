# This file configures the bazel workspace for the project.  See the section
# about "workspace" here: https://bazel.build/concepts/build-ref.
#
# Style notes for WORKSPACE.bazel:
#
# 1) If you are copy pasting some workspace code from a webpage, use copy paste
#    the URL of the source. This will make it easier to revise the content later
#    on and will provide more context to readers.
#
# TODO(reddaly): Consider using https://bazel.build/docs/bzlmod for managing
# dependencies. It's new and not widely adopted, so I'm not sure how to use it
# as of 6/1/2022.
workspace(
    name = "mdbtools",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

################################################################################
## Starlark
##
## bazel_skylib is used by other rules as a starlark library.
##
## See https://github.com/bazelbuild/bazel-skylib/releases for canonical
## installation incantations.
##
################################################################################

http_archive(
    name = "bazel_skylib",
    sha256 = "f7be3474d42aae265405a592bb7da8e171919d74c16f082a5457840f06054728",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz",
    ],
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

################################################################################
## C++ Rules
##
## The below rules build C++ targets somewhat hermetically. See
## https://github.com/bazelbuild/rules_go/issues/3167
################################################################################

# This sysroot is used by github.com/vsco/bazel-toolchains.
http_archive(
    name = "org_chromium_sysroot_linux_x64",
    build_file_content = """
filegroup(
  name = "sysroot",
  srcs = glob(["*/**"]),
  visibility = ["//visibility:public"],
)
""",
    sha256 = "84656a6df544ecef62169cfe3ab6e41bb4346a62d3ba2a045dc5a0a2ecea94a3",
    urls = ["https://commondatastorage.googleapis.com/chrome-linux-sysroot/toolchain/2202c161310ffde63729f29d27fe7bb24a0bc540/debian_stretch_amd64_sysroot.tar.xz"],
)

BAZEL_TOOLCHAIN_TAG = "0.7.2"

BAZEL_TOOLCHAIN_SHA = "f7aa8e59c9d3cafde6edb372d9bd25fb4ee7293ab20b916d867cd0baaa642529"

http_archive(
    name = "com_grail_bazel_toolchain",
    canonical_id = BAZEL_TOOLCHAIN_TAG,
    sha256 = BAZEL_TOOLCHAIN_SHA,
    strip_prefix = "bazel-toolchain-{tag}".format(tag = BAZEL_TOOLCHAIN_TAG),
    url = "https://github.com/grailbio/bazel-toolchain/archive/{tag}.tar.gz".format(tag = BAZEL_TOOLCHAIN_TAG),
)

load("@com_grail_bazel_toolchain//toolchain:deps.bzl", "bazel_toolchain_dependencies")

bazel_toolchain_dependencies()

load("@com_grail_bazel_toolchain//toolchain:rules.bzl", "llvm_toolchain")

llvm_toolchain(
    name = "llvm_toolchain",
    llvm_version = "14.0.0",
    sysroot = {
        "linux-x86_64": "@org_chromium_sysroot_linux_x64//:sysroot",
    },
)

load("@llvm_toolchain//:toolchains.bzl", "llvm_register_toolchains")

llvm_register_toolchains()

# C/C++ dependencies

http_archive(
    name = "glib_archive",
    build_file = "@mdbtools//bazel:glib.BUILD",
    sha256 = "520376d5a95039820f687b44aef7a8adb9e82777b5f914892dfacc05ecc32b48",
    strip_prefix = "glib-bazel-0.0.2",
    urls = [
      "https://github.com/reddaly/glib-bazel/archive/refs/tags/v0.0.2.tar.gz",
        #"https://mirror.bazel.build/ftp.gnome.org/pub/gnome/sources/glib/2.55/glib-2.55.1.tar.xz",
        #"https://ftp.gnome.org/pub/gnome/sources/glib/2.55/glib-2.55.1.tar.xz",
    ],
)

# See https://bazelbuild.github.io/rules_foreign_cc/0.9.0/index.html

http_archive(
    name = "rules_foreign_cc",
    # TODO: Get the latest sha256 value from a bazel debug message or the latest
    #       release on the releases page: https://github.com/bazelbuild/rules_foreign_cc/releases
    #
    # sha256 = "...",
    strip_prefix = "rules_foreign_cc-0.9.0",
    url = "https://github.com/bazelbuild/rules_foreign_cc/archive/0.9.0.tar.gz",
)

load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")

rules_foreign_cc_dependencies()
